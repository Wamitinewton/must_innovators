name: M.U.S.I.C App Release Pipeline

on:
  push:
    tags:
      - 'm.u.s.i.c-V*'

jobs:
  build-and-release:
    name: Build and Publish Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required for proper versioning and changelog

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Set execution permission for gradlew
        run: chmod +x ./gradlew

      - name: Extract version from tag
        id: get_version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#m.u.s.i.c-V}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Create keys.properties file
        run: |
          cat > keys.properties << EOL
          PROD_BACKEND_URL=${{ secrets.PROD_BACKEND_URL }}
          DEV_BACKEND_URL=${{ secrets.DEV_BACKEND_URL }}
          STAGING_BACKEND_URL=${{ secrets.STAGING_BACKEND_URL }}
          RELEASE_STORE_FILE=${{ secrets.RELEASE_STORE_FILE }}
          RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}
          RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}
          EOL

      - name: Decode and save keystore file
        env:
          ENCODED_KEYSTORE: ${{ secrets.ENCODED_KEYSTORE }}
        run: |
          mkdir -p keystore
          echo "$ENCODED_KEYSTORE" | base64 -d > ${{ secrets.RELEASE_STORE_FILE }}

      - name: Update version in build.gradle
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          sed -i "s/versionCode = 1/versionCode = $VERSION/" app/build.gradle.kts
          sed -i "s/versionName = \"1.0\"/versionName = \"$VERSION\"/" app/build.gradle.kts

      - name: Build production release APK
        run: ./gradlew :app:assembleProductionRelease --stacktrace

      - name: Build staging release APK
        run: ./gradlew :app:assembleStagingRelease --stacktrace

      - name: Rename APK files with version
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          mkdir -p releases
          cp app/build/outputs/apk/production/release/app-production-release.apk releases/music-production-v$VERSION.apk
          cp app/build/outputs/apk/staging/release/app-staging-release.apk releases/music-staging-v$VERSION.apk

      - name: Generate changelog
        id: changelog
        run: |
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || git rev-list --max-parents=0 HEAD)..HEAD)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: M.U.S.I.C App V${{ steps.get_version.outputs.VERSION }}
          body: |
            # M.U.S.I.C App Release V${{ steps.get_version.outputs.VERSION }}
            
            ## Changes in this release:
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## APK Files:
            - `music-production-v${{ steps.get_version.outputs.VERSION }}.apk`: Production build
            - `music-staging-v${{ steps.get_version.outputs.VERSION }}.apk`: Staging build
            
            Build generated automatically by GitHub Actions.
          files: |
            releases/music-production-v${{ steps.get_version.outputs.VERSION }}.apk
            releases/music-staging-v${{ steps.get_version.outputs.VERSION }}.apk
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload mapping files
        uses: actions/upload-artifact@v4
        with:
          name: mapping-files-v${{ steps.get_version.outputs.VERSION }}
          path: |
            app/build/outputs/mapping/productionRelease/mapping.txt
            app/build/outputs/mapping/stagingRelease/mapping.txt
          retention-days: 90