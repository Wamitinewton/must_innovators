name: Android CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  validate:
    name: Validate Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      # Make sure to create the keys.properties in the project root
      - name: Create keys.properties
        run: |
          cat > ${GITHUB_WORKSPACE}/keys.properties << EOL
          PROD_BACKEND_URL=${{ secrets.PROD_BACKEND_URL }}
          DEV_BACKEND_URL=${{ secrets.DEV_BACKEND_URL }}
          STAGING_BACKEND_URL=${{ secrets.STAGING_BACKEND_URL }}
          RELEASE_STORE_FILE=keystore.jks
          RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}
          RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}
          EOL

      - name: Create keystore file
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks

      - name: Debug - verify files
        run: |
          ls -la
          echo "Keys.properties contents:"
          cat keys.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Verify dependencies
        run: ./gradlew dependencies

  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      # Make sure to create the keys.properties in the project root
      - name: Create keys.properties
        run: |
          cat > ${GITHUB_WORKSPACE}/keys.properties << EOL
          PROD_BACKEND_URL=${{ secrets.PROD_BACKEND_URL }}
          DEV_BACKEND_URL=${{ secrets.DEV_BACKEND_URL }}
          STAGING_BACKEND_URL=${{ secrets.STAGING_BACKEND_URL }}
          RELEASE_STORE_FILE=keystore.jks
          RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}
          RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}
          EOL

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run ktlint formatting
        run: ./gradlew ktlintFormat

      - name: Run ktlint check
        run: ./gradlew ktlintCheck

      - name: Run Android lint
        run: ./gradlew lintDebug

      - name: Upload lint reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-reports
          path: |
            **/build/reports/lint-results-*.html
            **/build/reports/ktlint/

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      # Make sure to create the keys.properties in the project root
      - name: Create keys.properties
        run: |
          cat > ${GITHUB_WORKSPACE}/keys.properties << EOL
          PROD_BACKEND_URL=${{ secrets.PROD_BACKEND_URL }}
          DEV_BACKEND_URL=${{ secrets.DEV_BACKEND_URL }}
          STAGING_BACKEND_URL=${{ secrets.STAGING_BACKEND_URL }}
          RELEASE_STORE_FILE=keystore.jks
          RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}
          RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}
          EOL

      - name: Create keystore file
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-reports
          path: '**/build/reports/tests/'